version: "3.4"

services:
  zookeeper:
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      cqrs-network:
    volumes:
      - "./zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    networks:
      cqrs-network:
    restart: always
    volumes:
      - "./kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper

  mongo:
    image: mongo:7
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    ports:
      - 27017:27017
    networks:
      cqrs-network:
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

    volumes:
      - "./mongo_data:/data/db"
      - "./mongo_config:/data/configdb"

  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    networks:
      cqrs-network:
    restart: always
    volumes:
      - "./mysql_data:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=123456

   
networks:
  cqrs-network:
    name: cqrs
